plugins {
    id 'java-library'
    id 'maven-publish'
    id "io.spring.dependency-management" version "1.1.3"
}

group = 'com.joshlong'
version = '0.0.1-SNAPSHOT'


repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.boot:spring-boot-dependencies:3.1.2'
    }
}

java {
    sourceCompatibility = '17'
}

dependencies {
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation "org.springframework.boot:spring-boot-docker-compose"
    implementation "org.springframework.boot:spring-boot-starter-amqp"
    implementation "org.springframework.boot:spring-boot-starter-integration"
    implementation "org.springframework.boot:spring-boot-starter-json"
    implementation "org.springframework.boot:spring-boot-starter-oauth2-resource-server"
    implementation "org.springframework.integration:spring-integration-amqp"
    testImplementation "org.springframework.amqp:spring-rabbit-test"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.integration:spring-integration-test"
}

tasks.named('test') {
    useJUnitPlatform()
}


publishing {


    repositories {
        maven {
            name = 'artifactory'
            url = 'https://cloudnativejava.jfrog.io/artifactory/libs-snapshot-local' // modify this URL accordingly

            credentials {
                username = project.findProperty("artifactory_user") ?: System.getenv("ARTIFACTORY_USERNAME")
                password = project.findProperty("artifactory_password") ?: System.getenv("ARTIFACTORY_PASSWORD")
            }
        }
    }

    publications {
        mavenJava(MavenPublication) {
            from components.java

            pom {
                name = 'Social Hub Client'
                description = 'the client for the SocialHub service'

            }

            versionMapping {
                allVariants {
                    fromResolutionResult()
                }
            }
        }
    }
}

